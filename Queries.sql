-- part -A
use supply_chain;
-- 1.	Read the data from all tables.
show tables;

-- 2.	Find the country wise count of customers.
select * from customer;
select  country, count(id) as count_of_customers from customer group by country;

-- 3.	Display the products which are not discontinued.
select * from product;
select productname from product where isdiscontinued = 0;

-- 4.	Display the list of companies along with the product name that they are supplying.
select * from supplier;
select s.companyname, p.productname from supplier s join product p 
on s.id = p.supplierid group by s.companyname, p.productname; 

-- 5.	Display customer's information who stays in 'Mexico'
select * from customer where country like 'Mexico';


-- 6.	Display the price of costliest item that is ordered by the customer along with the customer details.
select a.id,a.firstname,a.city,a.country,a.phone,b.totalamount 
from customer a 
left join orders b
on a.id = b.customerid
order by b.totalamount desc limit 1;

-- 7.	Display the list of supplier id who owns highest lowest number of products.

select supplierid,max(package) from product group by supplierid having max(package) order by count(*); 

-- 8.	Display month wise and year wise count of the orders placed.
select * from orders;
select monthname(orderdate) as month , year(orderdate) as year , count(id) from orders group by month, year;

-- 9.	Which country has maximum suppliers.
select country, count(id) from supplier group by country order by count(id) desc limit 1;

-- 10. Which customers did not place any order.
select * from customer c where not exists (select * from orders i where c.id = i.customerid);

-- Part-B 
-- 1.	Arrange the product id, product name based on high demand by the customer.

select o.productid, p.productname, sum(quantity) from orderitem o join product p 
on o.productid = p.id group by o.productid order by sum(quantity) desc;

-- 2.	Display the number of orders delivered every year.

select count(id) as no_of_orders_delivered, year(orderdate) as year from orders group by year;

-- 3.	Calculate year-wise total revenue.
select  year(orderdate) as year, sum(totalamount) as total_revenue from orders group by  year;

-- 4.	Display the customer details whose order amount is maximum including his past orders.

select * from customer where id = (select customerid from
 (select customerid,sum(totalamount) from orders group by customerid order by 
 sum(totalamount) desc limit 1)a);


-- 5.	Display total amount ordered by each customer from high to low. 

select c.firstname , sum(o.totalamount) as total_amount from customer c join orders o 
on c.id = o.customerid group by c.firstname order by total_amount desc; -- sum of total amount by customer

select totalamount, customerid  from orders group by totalamount,customerid order by totalamount desc; -- total amount by a customer based on every order

/* A sales and marketing department of this company wants to find out how frequently 
customer have business with them. This can be done in two ways. (Answer Q 6 and Q 7 for the same) */

-- 6 Approach 1. List the current and previous order amount for each customers.

select totalamount, customerid , lag(totalamount) over(partition by customerid) from orders;

/* 7. Approach 2. Display the customerid, order ids and the 
order dates along with the previous order date and the next order date for every customer in the table:: */
-- DIY for learners
select customerid , id, orderdate, lag(orderdate) over(partition by customerid) as previous_order_date, 
lead(orderdate) over(partition by customerid) as next_order_date from orders;


-- 8.	Find out top 3 suppliers in terms of revenue generated by their products.
select s.companyname, o.productid, sum(o.unitprice*o.quantity) as total_revenue from orderitem o 
join product p on o.productid = p.id 
join supplier s 
on s.id = p.supplierid 
group by  s.companyname, o.productid 
order by total_revenue desc limit 3 ;




-- PART - C : 

-- 1. Fetch the records to display the customer detials who ordered more than 10 products in the single order

select c.firstname, sum(oi.quantity)  from customer c join orders o on c.id = o.customerid 
join orderitem oi on o.id = oi.orderid 
group by orderid having sum(oi.quantity) > 10;

-- 2.	Mr. Kavin want to become a supplier. He got the database of "Richard's Supply" for reference. Help him to pick: 
-- a. List few products that he should choose based on demand.
-- b. Who will be the competitors for him for the products suggested in above questions.

select p.productname, count(oi.quantity) as product_on_demand from product p join orderitem oi 
on p.id = oi.productid group by p.productname having product_on_demand > 40 order by product_on_demand desc;

select p.productname, count(oi.quantity) as product_on_demand,s.companyname as competitors from product p 
inner join orderitem oi on p.id = oi.productid 
inner join supplier s on p.supplierid = s.id
group by p.productname,competitors having product_on_demand > 40 order by product_on_demand desc;



-- 3.	Create a combined list to display customers and suppliers details considering the following criteria 
-- •	Both customer and supplier belong to the same country
-- •	Customer who does not have supplier in their country
-- •	Supplier who does not have customer in their country

select s.* ,c.*  from supplier s
left join product p on s.id = p.supplierid 
left join orderitem oi on p.id = oi.productid 
left join orders o on oi.id = o.ordernumber 
left join customer c on s.id = c.id 
where c.country = s.country or s.companyname is null or c.firstname is null;

-- 4.	Every supplier supplies specific products to the customers. 
-- Create a view of suppliers and total sales made by their products and write a query on this view to find out top 2 suppliers 
-- (using windows function RANK() in each country by total sales done by the products.

CREATE VIEW supplier_total_sales AS
SELECT s.id,s.companyname,s.country,
SUM(oi.unitprice) AS total_sales
FROM supplier s
LEFT JOIN product p ON s.id = p.supplierid
left join orderitem oi on p.id = oi.productid 
left join orders o on oi.id = o.ordernumber 
GROUP BY s.id, s.companyname, s.country; 

SELECT country, companyname, total_sales,
RANK() OVER ( ORDER BY total_sales DESC) AS sales_rank
FROM supplier_total_sales order by sales_rank asc limit 2 ;


-- part - D: 
-- 1.	Company sells the product at different discounted rates. Refer actual product price in product table and selling price in the order item table.
--  Write a query to find out total amount saved in each order then display the orders from highest to lowest amount saved.

select oi.orderid, p.unitprice - oi.unitprice as discount_rate from orderitem oi join product p 
 on oi.productid = p.id
group by productid
 order by orderid desc;
 
 select oi.orderid, p.unitprice - oi.unitprice as discount_rate
 from orderitem oi join product p 
 on oi.productid = p.id
 group by orderid 
 order by discount_rate desc;


-- 2.	Display all the product details with the ordered quantity size as 1.
select p.* from product p join orderitem oi on p.id = oi.productid where oi.quantity = 1;

-- 3.	Display the compan(y)ies which supplies products whose cost is above 100.

select companyname from supplier where id in (select supplierid from product where unitprice >100 );

select s.companyname,p.unitprice from supplier s join product p on s.id = p.supplierid 
group by s.companyname,p.unitprice having p.unitprice > 100;


-- 4.	Display the customer list who belongs to same city and country arrange in country wise.
SELECT 
    firstname, 
    city, 
    country
FROM 
    customer
WHERE 
    (city, country) IN (
        SELECT city, country
        FROM customer
        GROUP BY city, country
        HAVING COUNT(*) > 1
    )
ORDER BY 
    country;

